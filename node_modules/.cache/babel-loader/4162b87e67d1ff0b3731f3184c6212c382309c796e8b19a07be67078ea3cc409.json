{"ast":null,"code":"// slide\n(function (window, factory) {\n  // universal module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Slide = factory();\n  }\n})(typeof window != 'undefined' ? window : this, function factory() {\n  function Slide(beginMargin, endMargin, cellAlign) {\n    this.beginMargin = beginMargin;\n    this.endMargin = endMargin;\n    this.cellAlign = cellAlign;\n    this.cells = [];\n    this.outerWidth = 0;\n    this.height = 0;\n  }\n  let proto = Slide.prototype;\n  proto.addCell = function (cell) {\n    this.cells.push(cell);\n    this.outerWidth += cell.size.outerWidth;\n    this.height = Math.max(cell.size.outerHeight, this.height);\n    // first cell stuff\n    if (this.cells.length === 1) {\n      this.x = cell.x; // x comes from first cell\n      this.firstMargin = cell.size[this.beginMargin];\n    }\n  };\n  proto.updateTarget = function () {\n    let lastCell = this.getLastCell();\n    let lastMargin = lastCell ? lastCell.size[this.endMargin] : 0;\n    let slideWidth = this.outerWidth - (this.firstMargin + lastMargin);\n    this.target = this.x + this.firstMargin + slideWidth * this.cellAlign;\n  };\n  proto.getLastCell = function () {\n    return this.cells[this.cells.length - 1];\n  };\n  proto.select = function () {\n    this.cells.forEach(cell => cell.select());\n  };\n  proto.unselect = function () {\n    this.cells.forEach(cell => cell.unselect());\n  };\n  proto.getCellElements = function () {\n    return this.cells.map(cell => cell.element);\n  };\n  return Slide;\n});","map":{"version":3,"names":["window","factory","module","exports","Flickity","Slide","beginMargin","endMargin","cellAlign","cells","outerWidth","height","proto","prototype","addCell","cell","push","size","Math","max","outerHeight","length","x","firstMargin","updateTarget","lastCell","getLastCell","lastMargin","slideWidth","target","select","forEach","unselect","getCellElements","map","element"],"sources":["E:/Intelliper/intelliper/node_modules/flickity/js/slide.js"],"sourcesContent":["// slide\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Slide = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory() {\n\nfunction Slide( beginMargin, endMargin, cellAlign ) {\n  this.beginMargin = beginMargin;\n  this.endMargin = endMargin;\n  this.cellAlign = cellAlign;\n  this.cells = [];\n  this.outerWidth = 0;\n  this.height = 0;\n}\n\nlet proto = Slide.prototype;\n\nproto.addCell = function( cell ) {\n  this.cells.push( cell );\n  this.outerWidth += cell.size.outerWidth;\n  this.height = Math.max( cell.size.outerHeight, this.height );\n  // first cell stuff\n  if ( this.cells.length === 1 ) {\n    this.x = cell.x; // x comes from first cell\n    this.firstMargin = cell.size[ this.beginMargin ];\n  }\n};\n\nproto.updateTarget = function() {\n  let lastCell = this.getLastCell();\n  let lastMargin = lastCell ? lastCell.size[ this.endMargin ] : 0;\n  let slideWidth = this.outerWidth - ( this.firstMargin + lastMargin );\n  this.target = this.x + this.firstMargin + slideWidth * this.cellAlign;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.select = function() {\n  this.cells.forEach( ( cell ) => cell.select() );\n};\n\nproto.unselect = function() {\n  this.cells.forEach( ( cell ) => cell.unselect() );\n};\n\nproto.getCellElements = function() {\n  return this.cells.map( ( cell ) => cell.element );\n};\n\nreturn Slide;\n\n} ) );\n"],"mappings":"AAAA;AACE,WAAUA,MAAM,EAAEC,OAAO,EAAG;EAC5B;EACA,IAAK,OAAOC,MAAM,IAAI,QAAQ,IAAIA,MAAM,CAACC,OAAO,EAAG;IACjD;IACAD,MAAM,CAACC,OAAO,GAAGF,OAAO,EAAE;EAC5B,CAAC,MAAM;IACL;IACAD,MAAM,CAACI,QAAQ,GAAGJ,MAAM,CAACI,QAAQ,IAAI,CAAC,CAAC;IACvCJ,MAAM,CAACI,QAAQ,CAACC,KAAK,GAAGJ,OAAO,EAAE;EACnC;AAEF,CAAC,EAAE,OAAOD,MAAM,IAAI,WAAW,GAAGA,MAAM,GAAG,IAAI,EAAE,SAASC,OAAO,GAAG;EAEpE,SAASI,KAAK,CAAEC,WAAW,EAAEC,SAAS,EAAEC,SAAS,EAAG;IAClD,IAAI,CAACF,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,MAAM,GAAG,CAAC;EACjB;EAEA,IAAIC,KAAK,GAAGP,KAAK,CAACQ,SAAS;EAE3BD,KAAK,CAACE,OAAO,GAAG,UAAUC,IAAI,EAAG;IAC/B,IAAI,CAACN,KAAK,CAACO,IAAI,CAAED,IAAI,CAAE;IACvB,IAAI,CAACL,UAAU,IAAIK,IAAI,CAACE,IAAI,CAACP,UAAU;IACvC,IAAI,CAACC,MAAM,GAAGO,IAAI,CAACC,GAAG,CAAEJ,IAAI,CAACE,IAAI,CAACG,WAAW,EAAE,IAAI,CAACT,MAAM,CAAE;IAC5D;IACA,IAAK,IAAI,CAACF,KAAK,CAACY,MAAM,KAAK,CAAC,EAAG;MAC7B,IAAI,CAACC,CAAC,GAAGP,IAAI,CAACO,CAAC,CAAC,CAAC;MACjB,IAAI,CAACC,WAAW,GAAGR,IAAI,CAACE,IAAI,CAAE,IAAI,CAACX,WAAW,CAAE;IAClD;EACF,CAAC;EAEDM,KAAK,CAACY,YAAY,GAAG,YAAW;IAC9B,IAAIC,QAAQ,GAAG,IAAI,CAACC,WAAW,EAAE;IACjC,IAAIC,UAAU,GAAGF,QAAQ,GAAGA,QAAQ,CAACR,IAAI,CAAE,IAAI,CAACV,SAAS,CAAE,GAAG,CAAC;IAC/D,IAAIqB,UAAU,GAAG,IAAI,CAAClB,UAAU,IAAK,IAAI,CAACa,WAAW,GAAGI,UAAU,CAAE;IACpE,IAAI,CAACE,MAAM,GAAG,IAAI,CAACP,CAAC,GAAG,IAAI,CAACC,WAAW,GAAGK,UAAU,GAAG,IAAI,CAACpB,SAAS;EACvE,CAAC;EAEDI,KAAK,CAACc,WAAW,GAAG,YAAW;IAC7B,OAAO,IAAI,CAACjB,KAAK,CAAE,IAAI,CAACA,KAAK,CAACY,MAAM,GAAG,CAAC,CAAE;EAC5C,CAAC;EAEDT,KAAK,CAACkB,MAAM,GAAG,YAAW;IACxB,IAAI,CAACrB,KAAK,CAACsB,OAAO,CAAIhB,IAAI,IAAMA,IAAI,CAACe,MAAM,EAAE,CAAE;EACjD,CAAC;EAEDlB,KAAK,CAACoB,QAAQ,GAAG,YAAW;IAC1B,IAAI,CAACvB,KAAK,CAACsB,OAAO,CAAIhB,IAAI,IAAMA,IAAI,CAACiB,QAAQ,EAAE,CAAE;EACnD,CAAC;EAEDpB,KAAK,CAACqB,eAAe,GAAG,YAAW;IACjC,OAAO,IAAI,CAACxB,KAAK,CAACyB,GAAG,CAAInB,IAAI,IAAMA,IAAI,CAACoB,OAAO,CAAE;EACnD,CAAC;EAED,OAAO9B,KAAK;AAEZ,CAAC,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}