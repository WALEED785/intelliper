{"ast":null,"code":"// animate\n(function (window, factory) {\n  // universal module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('fizzy-ui-utils'));\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.animatePrototype = factory(window.fizzyUIUtils);\n  }\n})(typeof window != 'undefined' ? window : this, function factory(utils) {\n  // -------------------------- animate -------------------------- //\n\n  let proto = {};\n  proto.startAnimation = function () {\n    if (this.isAnimating) return;\n    this.isAnimating = true;\n    this.restingFrames = 0;\n    this.animate();\n  };\n  proto.animate = function () {\n    this.applyDragForce();\n    this.applySelectedAttraction();\n    let previousX = this.x;\n    this.integratePhysics();\n    this.positionSlider();\n    this.settle(previousX);\n    // animate next frame\n    if (this.isAnimating) requestAnimationFrame(() => this.animate());\n  };\n  proto.positionSlider = function () {\n    let x = this.x;\n    // wrap position around\n    if (this.isWrapping) {\n      x = utils.modulo(x, this.slideableWidth) - this.slideableWidth;\n      this.shiftWrapCells(x);\n    }\n    this.setTranslateX(x, this.isAnimating);\n    this.dispatchScrollEvent();\n  };\n  proto.setTranslateX = function (x, is3d) {\n    x += this.cursorPosition;\n    // reverse if right-to-left and using transform\n    if (this.options.rightToLeft) x = -x;\n    let translateX = this.getPositionValue(x);\n    // use 3D transforms for hardware acceleration on iOS\n    // but use 2D when settled, for better font-rendering\n    this.slider.style.transform = is3d ? `translate3d(${translateX},0,0)` : `translateX(${translateX})`;\n  };\n  proto.dispatchScrollEvent = function () {\n    let firstSlide = this.slides[0];\n    if (!firstSlide) return;\n    let positionX = -this.x - firstSlide.target;\n    let progress = positionX / this.slidesWidth;\n    this.dispatchEvent('scroll', null, [progress, positionX]);\n  };\n  proto.positionSliderAtSelected = function () {\n    if (!this.cells.length) return;\n    this.x = -this.selectedSlide.target;\n    this.velocity = 0; // stop wobble\n    this.positionSlider();\n  };\n  proto.getPositionValue = function (position) {\n    if (this.options.percentPosition) {\n      // percent position, round to 2 digits, like 12.34%\n      return Math.round(position / this.size.innerWidth * 10000) * 0.01 + '%';\n    } else {\n      // pixel positioning\n      return Math.round(position) + 'px';\n    }\n  };\n  proto.settle = function (previousX) {\n    // keep track of frames where x hasn't moved\n    let isResting = !this.isPointerDown && Math.round(this.x * 100) === Math.round(previousX * 100);\n    if (isResting) this.restingFrames++;\n    // stop animating if resting for 3 or more frames\n    if (this.restingFrames > 2) {\n      this.isAnimating = false;\n      delete this.isFreeScrolling;\n      // render position with translateX when settled\n      this.positionSlider();\n      this.dispatchEvent('settle', null, [this.selectedIndex]);\n    }\n  };\n  proto.shiftWrapCells = function (x) {\n    // shift before cells\n    let beforeGap = this.cursorPosition + x;\n    this._shiftCells(this.beforeShiftCells, beforeGap, -1);\n    // shift after cells\n    let afterGap = this.size.innerWidth - (x + this.slideableWidth + this.cursorPosition);\n    this._shiftCells(this.afterShiftCells, afterGap, 1);\n  };\n  proto._shiftCells = function (cells, gap, shift) {\n    cells.forEach(cell => {\n      let cellShift = gap > 0 ? shift : 0;\n      this._wrapShiftCell(cell, cellShift);\n      gap -= cell.size.outerWidth;\n    });\n  };\n  proto._unshiftCells = function (cells) {\n    if (!cells || !cells.length) return;\n    cells.forEach(cell => this._wrapShiftCell(cell, 0));\n  };\n\n  // @param {Integer} shift - 0, 1, or -1\n  proto._wrapShiftCell = function (cell, shift) {\n    this._renderCellPosition(cell, cell.x + this.slideableWidth * shift);\n  };\n\n  // -------------------------- physics -------------------------- //\n\n  proto.integratePhysics = function () {\n    this.x += this.velocity;\n    this.velocity *= this.getFrictionFactor();\n  };\n  proto.applyForce = function (force) {\n    this.velocity += force;\n  };\n  proto.getFrictionFactor = function () {\n    return 1 - this.options[this.isFreeScrolling ? 'freeScrollFriction' : 'friction'];\n  };\n  proto.getRestingPosition = function () {\n    // my thanks to Steven Wittens, who simplified this math greatly\n    return this.x + this.velocity / (1 - this.getFrictionFactor());\n  };\n  proto.applyDragForce = function () {\n    if (!this.isDraggable || !this.isPointerDown) return;\n\n    // change the position to drag position by applying force\n    let dragVelocity = this.dragX - this.x;\n    let dragForce = dragVelocity - this.velocity;\n    this.applyForce(dragForce);\n  };\n  proto.applySelectedAttraction = function () {\n    // do not attract if pointer down or no slides\n    let dragDown = this.isDraggable && this.isPointerDown;\n    if (dragDown || this.isFreeScrolling || !this.slides.length) return;\n    let distance = this.selectedSlide.target * -1 - this.x;\n    let force = distance * this.options.selectedAttraction;\n    this.applyForce(force);\n  };\n  return proto;\n});","map":{"version":3,"names":["window","factory","module","exports","require","Flickity","animatePrototype","fizzyUIUtils","utils","proto","startAnimation","isAnimating","restingFrames","animate","applyDragForce","applySelectedAttraction","previousX","x","integratePhysics","positionSlider","settle","requestAnimationFrame","isWrapping","modulo","slideableWidth","shiftWrapCells","setTranslateX","dispatchScrollEvent","is3d","cursorPosition","options","rightToLeft","translateX","getPositionValue","slider","style","transform","firstSlide","slides","positionX","target","progress","slidesWidth","dispatchEvent","positionSliderAtSelected","cells","length","selectedSlide","velocity","position","percentPosition","Math","round","size","innerWidth","isResting","isPointerDown","isFreeScrolling","selectedIndex","beforeGap","_shiftCells","beforeShiftCells","afterGap","afterShiftCells","gap","shift","forEach","cell","cellShift","_wrapShiftCell","outerWidth","_unshiftCells","_renderCellPosition","getFrictionFactor","applyForce","force","getRestingPosition","isDraggable","dragVelocity","dragX","dragForce","dragDown","distance","selectedAttraction"],"sources":["E:/Intelliper/intelliper/node_modules/flickity/js/animate.js"],"sourcesContent":["// animate\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('fizzy-ui-utils') );\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.animatePrototype = factory( window.fizzyUIUtils );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( utils ) {\n\n// -------------------------- animate -------------------------- //\n\nlet proto = {};\n\nproto.startAnimation = function() {\n  if ( this.isAnimating ) return;\n\n  this.isAnimating = true;\n  this.restingFrames = 0;\n  this.animate();\n};\n\nproto.animate = function() {\n  this.applyDragForce();\n  this.applySelectedAttraction();\n\n  let previousX = this.x;\n\n  this.integratePhysics();\n  this.positionSlider();\n  this.settle( previousX );\n  // animate next frame\n  if ( this.isAnimating ) requestAnimationFrame( () => this.animate() );\n};\n\nproto.positionSlider = function() {\n  let x = this.x;\n  // wrap position around\n  if ( this.isWrapping ) {\n    x = utils.modulo( x, this.slideableWidth ) - this.slideableWidth;\n    this.shiftWrapCells( x );\n  }\n\n  this.setTranslateX( x, this.isAnimating );\n  this.dispatchScrollEvent();\n};\n\nproto.setTranslateX = function( x, is3d ) {\n  x += this.cursorPosition;\n  // reverse if right-to-left and using transform\n  if ( this.options.rightToLeft ) x = -x;\n  let translateX = this.getPositionValue( x );\n  // use 3D transforms for hardware acceleration on iOS\n  // but use 2D when settled, for better font-rendering\n  this.slider.style.transform = is3d ?\n    `translate3d(${translateX},0,0)` : `translateX(${translateX})`;\n};\n\nproto.dispatchScrollEvent = function() {\n  let firstSlide = this.slides[0];\n  if ( !firstSlide ) return;\n\n  let positionX = -this.x - firstSlide.target;\n  let progress = positionX / this.slidesWidth;\n  this.dispatchEvent( 'scroll', null, [ progress, positionX ] );\n};\n\nproto.positionSliderAtSelected = function() {\n  if ( !this.cells.length ) return;\n\n  this.x = -this.selectedSlide.target;\n  this.velocity = 0; // stop wobble\n  this.positionSlider();\n};\n\nproto.getPositionValue = function( position ) {\n  if ( this.options.percentPosition ) {\n    // percent position, round to 2 digits, like 12.34%\n    return ( Math.round( ( position / this.size.innerWidth ) * 10000 ) * 0.01 ) + '%';\n  } else {\n    // pixel positioning\n    return Math.round( position ) + 'px';\n  }\n};\n\nproto.settle = function( previousX ) {\n  // keep track of frames where x hasn't moved\n  let isResting = !this.isPointerDown &&\n      Math.round( this.x * 100 ) === Math.round( previousX * 100 );\n  if ( isResting ) this.restingFrames++;\n  // stop animating if resting for 3 or more frames\n  if ( this.restingFrames > 2 ) {\n    this.isAnimating = false;\n    delete this.isFreeScrolling;\n    // render position with translateX when settled\n    this.positionSlider();\n    this.dispatchEvent( 'settle', null, [ this.selectedIndex ] );\n  }\n};\n\nproto.shiftWrapCells = function( x ) {\n  // shift before cells\n  let beforeGap = this.cursorPosition + x;\n  this._shiftCells( this.beforeShiftCells, beforeGap, -1 );\n  // shift after cells\n  let afterGap = this.size.innerWidth - ( x + this.slideableWidth + this.cursorPosition );\n  this._shiftCells( this.afterShiftCells, afterGap, 1 );\n};\n\nproto._shiftCells = function( cells, gap, shift ) {\n  cells.forEach( ( cell ) => {\n    let cellShift = gap > 0 ? shift : 0;\n    this._wrapShiftCell( cell, cellShift );\n    gap -= cell.size.outerWidth;\n  } );\n};\n\nproto._unshiftCells = function( cells ) {\n  if ( !cells || !cells.length ) return;\n\n  cells.forEach( ( cell ) => this._wrapShiftCell( cell, 0 ) );\n};\n\n// @param {Integer} shift - 0, 1, or -1\nproto._wrapShiftCell = function( cell, shift ) {\n  this._renderCellPosition( cell, cell.x + this.slideableWidth * shift );\n};\n\n// -------------------------- physics -------------------------- //\n\nproto.integratePhysics = function() {\n  this.x += this.velocity;\n  this.velocity *= this.getFrictionFactor();\n};\n\nproto.applyForce = function( force ) {\n  this.velocity += force;\n};\n\nproto.getFrictionFactor = function() {\n  return 1 - this.options[ this.isFreeScrolling ? 'freeScrollFriction' : 'friction' ];\n};\n\nproto.getRestingPosition = function() {\n  // my thanks to Steven Wittens, who simplified this math greatly\n  return this.x + this.velocity / ( 1 - this.getFrictionFactor() );\n};\n\nproto.applyDragForce = function() {\n  if ( !this.isDraggable || !this.isPointerDown ) return;\n\n  // change the position to drag position by applying force\n  let dragVelocity = this.dragX - this.x;\n  let dragForce = dragVelocity - this.velocity;\n  this.applyForce( dragForce );\n};\n\nproto.applySelectedAttraction = function() {\n  // do not attract if pointer down or no slides\n  let dragDown = this.isDraggable && this.isPointerDown;\n  if ( dragDown || this.isFreeScrolling || !this.slides.length ) return;\n\n  let distance = this.selectedSlide.target * -1 - this.x;\n  let force = distance * this.options.selectedAttraction;\n  this.applyForce( force );\n};\n\nreturn proto;\n\n} ) );\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}