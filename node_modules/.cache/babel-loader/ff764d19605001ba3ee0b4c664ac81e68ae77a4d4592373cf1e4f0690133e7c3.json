{"ast":null,"code":"// lazyload\n(function (window, factory) {\n  // universal module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./core'), require('fizzy-ui-utils'));\n  } else {\n    // browser global\n    factory(window.Flickity, window.fizzyUIUtils);\n  }\n})(typeof window != 'undefined' ? window : this, function factory(Flickity, utils) {\n  const lazyAttr = 'data-flickity-lazyload';\n  const lazySrcAttr = `${lazyAttr}-src`;\n  const lazySrcsetAttr = `${lazyAttr}-srcset`;\n  const imgSelector = `img[${lazyAttr}], img[${lazySrcAttr}], ` + `img[${lazySrcsetAttr}], source[${lazySrcsetAttr}]`;\n  Flickity.create.lazyLoad = function () {\n    this.on('select', this.lazyLoad);\n    this.handleLazyLoadComplete = this.onLazyLoadComplete.bind(this);\n  };\n  let proto = Flickity.prototype;\n  proto.lazyLoad = function () {\n    let {\n      lazyLoad\n    } = this.options;\n    if (!lazyLoad) return;\n\n    // get adjacent cells, use lazyLoad option for adjacent count\n    let adjCount = typeof lazyLoad == 'number' ? lazyLoad : 0;\n    // lazy load images\n    this.getAdjacentCellElements(adjCount).map(getCellLazyImages).flat().forEach(img => new LazyLoader(img, this.handleLazyLoadComplete));\n  };\n  function getCellLazyImages(cellElem) {\n    // check if cell element is lazy image\n    if (cellElem.matches('img')) {\n      let cellAttr = cellElem.getAttribute(lazyAttr);\n      let cellSrcAttr = cellElem.getAttribute(lazySrcAttr);\n      let cellSrcsetAttr = cellElem.getAttribute(lazySrcsetAttr);\n      if (cellAttr || cellSrcAttr || cellSrcsetAttr) {\n        return cellElem;\n      }\n    }\n    // select lazy images in cell\n    return [...cellElem.querySelectorAll(imgSelector)];\n  }\n  proto.onLazyLoadComplete = function (img, event) {\n    let cell = this.getParentCell(img);\n    let cellElem = cell && cell.element;\n    this.cellSizeChange(cellElem);\n    this.dispatchEvent('lazyLoad', event, cellElem);\n  };\n\n  // -------------------------- LazyLoader -------------------------- //\n\n  /**\n   * class to handle loading images\n   * @param {Image} img - Image element\n   * @param {Function} onComplete - callback function\n   */\n  function LazyLoader(img, onComplete) {\n    this.img = img;\n    this.onComplete = onComplete;\n    this.load();\n  }\n  LazyLoader.prototype.handleEvent = utils.handleEvent;\n  LazyLoader.prototype.load = function () {\n    this.img.addEventListener('load', this);\n    this.img.addEventListener('error', this);\n    // get src & srcset\n    let src = this.img.getAttribute(lazyAttr) || this.img.getAttribute(lazySrcAttr);\n    let srcset = this.img.getAttribute(lazySrcsetAttr);\n    // set src & serset\n    this.img.src = src;\n    if (srcset) this.img.setAttribute('srcset', srcset);\n    // remove attr\n    this.img.removeAttribute(lazyAttr);\n    this.img.removeAttribute(lazySrcAttr);\n    this.img.removeAttribute(lazySrcsetAttr);\n  };\n  LazyLoader.prototype.onload = function (event) {\n    this.complete(event, 'flickity-lazyloaded');\n  };\n  LazyLoader.prototype.onerror = function (event) {\n    this.complete(event, 'flickity-lazyerror');\n  };\n  LazyLoader.prototype.complete = function (event, className) {\n    // unbind events\n    this.img.removeEventListener('load', this);\n    this.img.removeEventListener('error', this);\n    let mediaElem = this.img.parentNode.matches('picture') ? this.img.parentNode : this.img;\n    mediaElem.classList.add(className);\n    this.onComplete(this.img, event);\n  };\n\n  // -----  ----- //\n\n  Flickity.LazyLoader = LazyLoader;\n  return Flickity;\n});","map":{"version":3,"names":["window","factory","module","exports","require","Flickity","fizzyUIUtils","utils","lazyAttr","lazySrcAttr","lazySrcsetAttr","imgSelector","create","lazyLoad","on","handleLazyLoadComplete","onLazyLoadComplete","bind","proto","prototype","options","adjCount","getAdjacentCellElements","map","getCellLazyImages","flat","forEach","img","LazyLoader","cellElem","matches","cellAttr","getAttribute","cellSrcAttr","cellSrcsetAttr","querySelectorAll","event","cell","getParentCell","element","cellSizeChange","dispatchEvent","onComplete","load","handleEvent","addEventListener","src","srcset","setAttribute","removeAttribute","onload","complete","onerror","className","removeEventListener","mediaElem","parentNode","classList","add"],"sources":["E:/Intelliper/intelliper/node_modules/flickity/js/lazyload.js"],"sourcesContent":["// lazyload\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./core'),\n        require('fizzy-ui-utils'),\n    );\n  } else {\n    // browser global\n    factory(\n        window.Flickity,\n        window.fizzyUIUtils,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( Flickity, utils ) {\n\nconst lazyAttr = 'data-flickity-lazyload';\nconst lazySrcAttr = `${lazyAttr}-src`;\nconst lazySrcsetAttr = `${lazyAttr}-srcset`;\nconst imgSelector = `img[${lazyAttr}], img[${lazySrcAttr}], ` +\n  `img[${lazySrcsetAttr}], source[${lazySrcsetAttr}]`;\n\nFlickity.create.lazyLoad = function() {\n  this.on( 'select', this.lazyLoad );\n\n  this.handleLazyLoadComplete = this.onLazyLoadComplete.bind( this );\n};\n\nlet proto = Flickity.prototype;\n\nproto.lazyLoad = function() {\n  let { lazyLoad } = this.options;\n  if ( !lazyLoad ) return;\n\n  // get adjacent cells, use lazyLoad option for adjacent count\n  let adjCount = typeof lazyLoad == 'number' ? lazyLoad : 0;\n  // lazy load images\n  this.getAdjacentCellElements( adjCount )\n    .map( getCellLazyImages )\n    .flat()\n    .forEach( ( img ) => new LazyLoader( img, this.handleLazyLoadComplete ) );\n};\n\nfunction getCellLazyImages( cellElem ) {\n  // check if cell element is lazy image\n  if ( cellElem.matches('img') ) {\n    let cellAttr = cellElem.getAttribute( lazyAttr );\n    let cellSrcAttr = cellElem.getAttribute( lazySrcAttr );\n    let cellSrcsetAttr = cellElem.getAttribute( lazySrcsetAttr );\n    if ( cellAttr || cellSrcAttr || cellSrcsetAttr ) {\n      return cellElem;\n    }\n  }\n  // select lazy images in cell\n  return [ ...cellElem.querySelectorAll( imgSelector ) ];\n}\n\nproto.onLazyLoadComplete = function( img, event ) {\n  let cell = this.getParentCell( img );\n  let cellElem = cell && cell.element;\n  this.cellSizeChange( cellElem );\n\n  this.dispatchEvent( 'lazyLoad', event, cellElem );\n};\n\n// -------------------------- LazyLoader -------------------------- //\n\n/**\n * class to handle loading images\n * @param {Image} img - Image element\n * @param {Function} onComplete - callback function\n */\nfunction LazyLoader( img, onComplete ) {\n  this.img = img;\n  this.onComplete = onComplete;\n  this.load();\n}\n\nLazyLoader.prototype.handleEvent = utils.handleEvent;\n\nLazyLoader.prototype.load = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  // get src & srcset\n  let src = this.img.getAttribute( lazyAttr ) ||\n    this.img.getAttribute( lazySrcAttr );\n  let srcset = this.img.getAttribute( lazySrcsetAttr );\n  // set src & serset\n  this.img.src = src;\n  if ( srcset ) this.img.setAttribute( 'srcset', srcset );\n  // remove attr\n  this.img.removeAttribute( lazyAttr );\n  this.img.removeAttribute( lazySrcAttr );\n  this.img.removeAttribute( lazySrcsetAttr );\n};\n\nLazyLoader.prototype.onload = function( event ) {\n  this.complete( event, 'flickity-lazyloaded' );\n};\n\nLazyLoader.prototype.onerror = function( event ) {\n  this.complete( event, 'flickity-lazyerror' );\n};\n\nLazyLoader.prototype.complete = function( event, className ) {\n  // unbind events\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n  let mediaElem = this.img.parentNode.matches('picture') ? this.img.parentNode : this.img;\n  mediaElem.classList.add( className );\n\n  this.onComplete( this.img, event );\n};\n\n// -----  ----- //\n\nFlickity.LazyLoader = LazyLoader;\n\nreturn Flickity;\n\n} ) );\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}