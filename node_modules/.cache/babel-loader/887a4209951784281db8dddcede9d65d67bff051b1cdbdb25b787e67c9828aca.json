{"ast":null,"code":"// imagesloaded\n(function (window, factory) {\n  // universal module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./core'), require('imagesloaded'));\n  } else {\n    // browser global\n    factory(window.Flickity, window.imagesLoaded);\n  }\n})(typeof window != 'undefined' ? window : this, function factory(Flickity, imagesLoaded) {\n  Flickity.create.imagesLoaded = function () {\n    this.on('activate', this.imagesLoaded);\n  };\n  Flickity.prototype.imagesLoaded = function () {\n    if (!this.options.imagesLoaded) return;\n    let onImagesLoadedProgress = (instance, image) => {\n      let cell = this.getParentCell(image.img);\n      this.cellSizeChange(cell && cell.element);\n      if (!this.options.freeScroll) this.positionSliderAtSelected();\n    };\n    imagesLoaded(this.slider).on('progress', onImagesLoadedProgress);\n  };\n  return Flickity;\n});","map":{"version":3,"names":["window","factory","module","exports","require","Flickity","imagesLoaded","create","on","prototype","options","onImagesLoadedProgress","instance","image","cell","getParentCell","img","cellSizeChange","element","freeScroll","positionSliderAtSelected","slider"],"sources":["E:/Intelliper/intelliper/node_modules/flickity/js/imagesloaded.js"],"sourcesContent":["// imagesloaded\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./core'),\n        require('imagesloaded'),\n    );\n  } else {\n    // browser global\n    factory(\n        window.Flickity,\n        window.imagesLoaded,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this,\n    function factory( Flickity, imagesLoaded ) {\n\nFlickity.create.imagesLoaded = function() {\n  this.on( 'activate', this.imagesLoaded );\n};\n\nFlickity.prototype.imagesLoaded = function() {\n  if ( !this.options.imagesLoaded ) return;\n\n  let onImagesLoadedProgress = ( instance, image ) => {\n    let cell = this.getParentCell( image.img );\n    this.cellSizeChange( cell && cell.element );\n    if ( !this.options.freeScroll ) this.positionSliderAtSelected();\n  };\n  imagesLoaded( this.slider ).on( 'progress', onImagesLoadedProgress );\n};\n\nreturn Flickity;\n\n} ) );\n"],"mappings":"AAAA;AACE,WAAUA,MAAM,EAAEC,OAAO,EAAG;EAC5B;EACA,IAAK,OAAOC,MAAM,IAAI,QAAQ,IAAIA,MAAM,CAACC,OAAO,EAAG;IACjD;IACAD,MAAM,CAACC,OAAO,GAAGF,OAAO,CACpBG,OAAO,CAAC,QAAQ,CAAC,EACjBA,OAAO,CAAC,cAAc,CAAC,CAC1B;EACH,CAAC,MAAM;IACL;IACAH,OAAO,CACHD,MAAM,CAACK,QAAQ,EACfL,MAAM,CAACM,YAAY,CACtB;EACH;AAEF,CAAC,EAAE,OAAON,MAAM,IAAI,WAAW,GAAGA,MAAM,GAAG,IAAI,EAC3C,SAASC,OAAO,CAAEI,QAAQ,EAAEC,YAAY,EAAG;EAE/CD,QAAQ,CAACE,MAAM,CAACD,YAAY,GAAG,YAAW;IACxC,IAAI,CAACE,EAAE,CAAE,UAAU,EAAE,IAAI,CAACF,YAAY,CAAE;EAC1C,CAAC;EAEDD,QAAQ,CAACI,SAAS,CAACH,YAAY,GAAG,YAAW;IAC3C,IAAK,CAAC,IAAI,CAACI,OAAO,CAACJ,YAAY,EAAG;IAElC,IAAIK,sBAAsB,GAAG,CAAEC,QAAQ,EAAEC,KAAK,KAAM;MAClD,IAAIC,IAAI,GAAG,IAAI,CAACC,aAAa,CAAEF,KAAK,CAACG,GAAG,CAAE;MAC1C,IAAI,CAACC,cAAc,CAAEH,IAAI,IAAIA,IAAI,CAACI,OAAO,CAAE;MAC3C,IAAK,CAAC,IAAI,CAACR,OAAO,CAACS,UAAU,EAAG,IAAI,CAACC,wBAAwB,EAAE;IACjE,CAAC;IACDd,YAAY,CAAE,IAAI,CAACe,MAAM,CAAE,CAACb,EAAE,CAAE,UAAU,EAAEG,sBAAsB,CAAE;EACtE,CAAC;EAED,OAAON,QAAQ;AAEf,CAAC,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}